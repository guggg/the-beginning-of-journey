if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAAM3edvfcmsBAFzPEyeq2CDqORpnJy956QHJgxv7f4clehxnyIhV42Ie0oTmOo6KiEclYWfys3d1Dmf34jCTjDdAThFaBlwmZB2ek2XH8PTr0tB1v1DPZB3kIqbmWTxJZAsKbPDg99L5SJsB7c6ZBiYW7sJQKvSbsVfJNe0eH8WvAfZBTK9GHJAOCwsr8AkhJ9XJDNyAmn1f7dkzp6z9P'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("cherngs.y", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
aggregate(posts~date,totalPage,mean)
token<-'CAAM3edvfcmsBAFzPEyeq2CDqORpnJy956QHJgxv7f4clehxnyIhV42Ie0oTmOo6KiEclYWfys3d1Dmf34jCTjDdAThFaBlwmZB2ek2XH8PTr0tB1v1DPZB3kIqbmWTxJZAsKbPDg99L5SJsB7c6ZBiYW7sJQKvSbsVfJNe0eH8WvAfZBTK9GHJAOCwsr8AkhJ9XJDNyAmn1f7dkzp6z9P'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
PostCount<-aggregate(id~dateTPE,totalPage,length)
library(knitr)
kable(head(PostCount[order(PostCount$id,decreasing = T),]))
View(PostCount)
View(totalPage)
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,length)
library(knitr)
kable(head(PostCount[order(likeCount$id,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,length)
library(knitr)
kable(head(LikeCount[order(LikeCount$id,decreasing = T),]))
View(LikeCount)
View(PostCount)
View(LikeCount)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(LikeCount[order(LikeCount$id,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
PostCount<-aggregate(id~dateTPE,totalPage,length)
library(knitr)
kable(head(PostCount[order(PostCount$id,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(LikeCount))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
CommentsCount<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(CommentsCount[order(CommentsCount$likes_count,decreasing = T),]))
View(CommentsCount)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
CommentsCount<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(CommentsCount[order(CommentsCount$likes_count,decreasing = T),]))
View(CommentsCount)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
CommentsCount<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(CommentsCount[order(CommentsCount$comments_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
SharesCount<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(SharesCount[order(SharesCount$shares_count,decreasing = T),]))
```
View(totalPage)
View(totalPage)
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAAM3edvfcmsBAFzPEyeq2CDqORpnJy956QHJgxv7f4clehxnyIhV42Ie0oTmOo6KiEclYWfys3d1Dmf34jCTjDdAThFaBlwmZB2ek2XH8PTr0tB1v1DPZB3kIqbmWTxJZAsKbPDg99L5SJsB7c6ZBiYW7sJQKvSbsVfJNe0eH8WvAfZBTK9GHJAOCwsr8AkhJ9XJDNyAmn1f7dkzp6z9P'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
token<-'CAAM3edvfcmsBAFzPEyeq2CDqORpnJy956QHJgxv7f4clehxnyIhV42Ie0oTmOo6KiEclYWfys3d1Dmf34jCTjDdAThFaBlwmZB2ek2XH8PTr0tB1v1DPZB3kIqbmWTxJZAsKbPDg99L5SJsB7c6ZBiYW7sJQKvSbsVfJNe0eH8WvAfZBTK9GHJAOCwsr8AkhJ9XJDNyAmn1f7dkzp6z9P'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
token<-'CAACEdEose0cBAKgLDL114Dpe1oUfhZCUF3Cy0K8s1ZAndZBlKaYSZC6fouqkfODu6QSfmRcJ6ZCaspuZCDIaaqarGOLtohyfwQRXZB7h6182TlSLzAq2ZBjTFrR37jpALaIRZBDX2rV40oU0HnLvngZAsIJdryReOztcV12P3aML3Wcd8gui7hEhFnUWwiwsYIQof6nBQEPILrdlunrSxufPVW'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
View(tempPage)
token<-'CAACEdEose0cBAKgLDL114Dpe1oUfhZCUF3Cy0K8s1ZAndZBlKaYSZC6fouqkfODu6QSfmRcJ6ZCaspuZCDIaaqarGOLtohyfwQRXZB7h6182TlSLzAq2ZBjTFrR37jpALaIRZBDX2rV40oU0HnLvngZAsIJdryReOztcV12P3aML3Wcd8gui7hEhFnUWwiwsYIQof6nBQEPILrdlunrSxufPVW'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("llchu", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
View(totalPage)
View(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
PostCount<-aggregate(id~dateTPE,totalPage,length)
library(knitr)
kable(head(PostCount[order(PostCount$id,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,colSums)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,colSums)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,Sum)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,summary
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,summary)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
LikeCount<-aggregate(likes_count~dateTPE,totalPage,sum)
library(knitr)
kable(head(LikeCount[order(LikeCount$likes_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
SharesCount<-aggregate(shares_count~dateTPE,totalPage,sum)
library(knitr)
kable(head(SharesCount[order(SharesCount$shares_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
CommentsCount<-aggregate(comments_count~dateTPE,totalPage,sum)
library(knitr)
kable(head(CommentsCount[order(CommentsCount$comments_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
CommentsCount<-aggregate(comments_count~dateTPE,totalPage,sum)
library(knitr)
kable(head(CommentsCount[order(CommentsCount$comments_count,decreasing = T),]))
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
SharesCount<-aggregate(shares_count~dateTPE,totalPage,sum)
library(knitr)
kable(head(SharesCount[order(SharesCount$shares_count,decreasing = T),]))
View(totalPage)
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-"CAACEdEose0cBAOW9QjjEMGHGp54JEGytGz9tPRltLiHRGJsHae0dSEHxlVmogqJ4hd8EoUQvB3yvDWFDpnHX8dfA2AIgelMfXQ7jZCrQbeaTEIWfjZCWoVZCzZB3cqrq8HFwr73qD1eaiNZAZCmFq0iZCi6kWFHn6Dh8gPFkRLMqvLhl17CuvbpixEO6k0ZBr1FcXq9L9pmFvL3JeX1ZCIBg8"
FBData=GET(
paste0(
"https://graph.facebook.com/v2.5/llchu?fields=posts.limit(10)%7Blikes%2Ccomments%2Cmessage%7D&access_token=CAACEdEose0cBAPZBON6vvVgStfZA2c0kEXMFu0V4YygJdxAdIHDPHM2JZBZAcZBz472chZB2wlOHdwVynbSkBeBpVLCMaeP1TqRuNiZBEdeQ8ywu1V8aN8ZA57P8vmYByGvfLPxG4dhJkaX8WQhXS3yLk8uditasXrBsCZCou0ofxb0jeKMMdZCoIHjAdHdtwwUVidhe3sMQWQJPazZC5mKsJyn",
token))
names(FBData)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT") #2016-01-16T15:05:36+0000
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei") #2016-01-16
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
SharesCount<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(head(SharesCount[order(SharesCount$shares_count,decreasing = T),]))
